---
version: 0.2

# https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

# run-as:

env:
  shell: bash
  # variables:
  #   MYENV_VAR: "value"
  #   key: "value"
  #   key: "value"
  # parameter-store:
  #   key: "value"
  #   key: "value"
  # exported-variables:
  #   - variable
  #   - variable
  # secrets-manager:
  #   key: secret-id:json-key:version-stage:version-id
  # git-credential-helper: no | yes

# proxy:
  # upload-artifacts: no | yes
  # logs: no | yes

# batch:
#   fast-fail: false | true
  # build-list:
  # build-matrix:
  # build-graph:
        
phases:
  install:
    # run-as: Linux-user-name
    on-failure: ABORT
    runtime-versions:
      python: 3.x
    commands:
      - echo installing python libs
      - pip install -r ./src/requirements.txt
      - pip install -r ./build_and_test_requirements.txt
    #   - command
    # finally:
    #   - command
    #   - command
  # pre_build:
  #   # run-as: Linux-user-name
  #   on-failure: ABORT
  #   commands:
    #   - command
    # finally:
    #   - command
    #   - command
  build:
    # run-as: Linux-user-name
    on-failure: ABORT
    commands:
    # put tests in build phase since if pre_build fails you won't get reports otherwise
    # https://aws.amazon.com/blogs/devops/test-reports-with-aws-codebuild/
      - echo executing unit tests...
      - rm -rf ./reports && mkdir reports
      - pytest --junitxml=./reports/test_results.xml --cov-report xml:./reports/coverage.xml --cov
      - echo getting libs for Lambda package
      - cd ./src && pip install -r requirements.txt -t .
      - echo building SAM package...
      - cd ../ && sam build
      - echo validating SAM template...
      - sam validate
      - echo packaging SAM template ready for deployment
      - sam package --s3-bucket cf-templates-1lk9yb4hhccfb-eu-west-1 --output-template-file .aws-sam/build/packaged.yaml
    # finally:
    #   - command
    #   - command
  post_build:
    # run-as: Linux-user-name
    on-failure: ABORT
    commands:
      # - sam build
      # - sam validate
#     finally:
#       - command
#       - command
reports:
  arn:aws:codebuild:eu-west-1:413673226572:report-group/clf-build-pytest_reports:
    files:
      - 'test_results.xml'
    file-format: JUNITXML
    base-directory: 'reports'
  # for coverage report, have to precreate report group and use arn or report group type
  # will default to test type rather than coverage and report won't work
  arn:aws:codebuild:eu-west-1:413673226572:report-group/clf-build-coverage-report:
    files:
      - 'coverage.xml'
    file-format: COBERTURAXML
    base-directory: 'reports'
artifacts:
  files:
    - '.aws-sam/**/*'
  # name: clf-weather-package-$(date +%Y-%m-%d)
  # artifact package type (e.g. none or zip is specified in build project)
  discard-paths: no
  base-directory: '.'
  # exclude-paths: excluded paths
  enable-symlinks: yes
  # s3-prefix: clf-builds
  # secondary-artifacts:
  #   artifactIdentifier:
  #     files:
  #       - 'appspec.yml'
  #     name: appspec.yml
  #     # discard-paths: no | yes
  #     base-directory: src
    # artifactIdentifier:
    #   files:
    #     - location
    #     - location
    #   discard-paths: no | yes
    #   base-directory: location
# cache:
#   paths:
#     - path
#     - path

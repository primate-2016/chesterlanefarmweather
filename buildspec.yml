---
version: 0.2

# https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

# run-as:

env:
  shell: bash
  # variables:
  #   MYENV_VAR: "value"
  #   key: "value"
  #   key: "value"
  # parameter-store:
  #   key: "value"
  #   key: "value"
  # exported-variables:
  #   - variable
  #   - variable
  # secrets-manager:
  #   key: secret-id:json-key:version-stage:version-id
  # git-credential-helper: no | yes

# proxy:
  # upload-artifacts: no | yes
  # logs: no | yes

# batch:
#   fast-fail: false | true
  # build-list:
  # build-matrix:
  # build-graph:
        
phases:
  install:
    # run-as: Linux-user-name
    on-failure: ABORT
    runtime-versions:
      python: 3.x
    commands:
      - echo installing python libs
      - pip install -r ./src/requirements.txt
      - pip install -r ./src/test_requirements.txt
    #   - command
    # finally:
    #   - command
    #   - command
  # pre_build:
  #   # run-as: Linux-user-name
  #   on-failure: ABORT
  #   commands:
    #   - command
    # finally:
    #   - command
    #   - command
  build:
    # run-as: Linux-user-name
    # on-failure: ABORT
    commands:
    # put tests in build phase since if pre_build fails you won't get reports otherwise
      - echo executing unit tests
      - coverage run -m pytest --junitxml=./test_results.xml
      - echo generating coverage report
      - coverage xml -o coverage.xml
      - echo getting libs for Lambda package
      - cd ./src && pip install -r requirements.txt -t .
    # finally:
    #   - command
    #   - command
#   post_build:
#     run-as: Linux-user-name
#     on-failure: ABORT | CONTINUE
#     commands:
#       - command
#       - command
#     finally:
#       - command
#       - command
reports:
  pytest_reports:
    files:
      - './test_results.xml'
    file-format: JUNITXML
  cobertura-coverage-report:
    files:
      - './coverage.xml'
    file-format: 'COBERTURA'
artifacts:
  files:
    - './src/**/*'
  name: package-$(date +%Y-%m-%d)
  # artifact package type (e.g. none or zip is specified in build project)
  discard-paths: no
  base-directory: location
  # exclude-paths: excluded paths
  enable-symlinks: yes
  s3-prefix: prefix
  # secondary-artifacts:
  #   artifactIdentifier:
  #     files:
  #       - location
  #       - location
  #     name: secondary-artifact-name
  #     discard-paths: no | yes
  #     base-directory: location
  #   artifactIdentifier:
  #     files:
  #       - location
  #       - location
  #     discard-paths: no | yes
  #     base-directory: location
# cache:
#   paths:
#     - path
#     - path
